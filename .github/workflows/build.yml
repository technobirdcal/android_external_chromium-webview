name: Build Chromium WebView APK and Release with Version

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-webview:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/android-sdk

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup PATH for Android SDK tools
        run: echo "PATH=$ANDROID_SDK_ROOT/cmdline-tools/tools/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH" >> $GITHUB_ENV

      - name: Install required dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk wget unzip python3 git

      - name: Setup Android SDK
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-9123335_latest.zip -O cmdline-tools.zip
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          unzip cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          yes | $ANDROID_SDK_ROOT/cmdline-tools/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-30" "build-tools;30.0.3"

      - name: Extract Chromium version from build-webview.sh
        id: extract_version
        run: |
          VERSION=$(grep -Po '(?<=chromium_version=)[0-9.]+' build-webview.sh | head -1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Prepare build environment
        run: |
          chmod +x build-webview.sh
          ./build-webview.sh

      - name: Find generated APK and rename with version
        id: find_and_rename_apk
        run: |
          APK_PATH=$(find . -type f -name '*.apk' | head -1)
          VERSION=${{ steps.extract_version.outputs.version }}
          NEW_APK_NAME="chromium-webview-v${VERSION}.apk"
          mv "$APK_PATH" "$NEW_APK_NAME"
          echo "apk_path=$PWD/$NEW_APK_NAME" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          release_name: Chromium WebView v${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_and_rename_apk.outputs.apk_path }}
          asset_name: chromium-webview-v${{ steps.extract_version.outputs.version }}.apk
          asset_content_type: application/vnd.android.package-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}